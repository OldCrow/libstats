# Pre-commit hooks configuration for libstats
# Run: pre-commit install to set up the git hook scripts
# Then pre-commit will run automatically on git commit

# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

default_language_version:
  python: python3

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        name: Fix trailing whitespace
      - id: end-of-file-fixer
        name: Fix missing newline at end of file
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: mixed-line-ending
        name: Check line endings
        args: ['--fix=lf']
      - id: check-symlinks
        name: Check for broken symlinks
      - id: check-executables-have-shebangs
        name: Check executables have shebangs
      - id: check-shebang-scripts-are-executable
        name: Check scripts with shebangs are executable

  # C++ formatting with clang-format
  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: v20.1.8
    hooks:
      - id: clang-format
        name: Format C++ code with clang-format
        types_or: [c++, c]
        args: ['-i', '--style=file']
        files: \.(cpp|cc|cxx|hpp|h|hxx)$

  # CMake formatting and linting
  - repo: https://github.com/cheshirekow/cmake-format-precommit
    rev: v0.6.13
    hooks:
      - id: cmake-format
        name: Format CMake files
        args: ['--config=.cmake-format.yaml', '--in-place']
        additional_dependencies: ["pyyaml"]

  # Shell script checks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.11.0.1
    hooks:
      - id: shellcheck
        name: Check shell scripts
        args: ['--severity=warning']

  # Markdown formatting (Ruby-based for better compatibility)
#  - repo: https://github.com/markdownlint/markdownlint
#    rev: v0.13.0
#    hooks:
#      - id: markdownlint
#        name: Lint markdown files
#        args: ["-s", ".markdownlint-style.rb"]

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        args: ['--baseline', '.secrets.baseline']
        additional_dependencies: ['detect-secrets']

  # Custom local hooks for libstats-specific checks
  - repo: local
    hooks:
      - id: check-pragma-once
        name: Check for #pragma once in headers
        entry: scripts/check-pragma-once.sh
        language: script
        files: \.(h|hpp|hxx)$
        pass_filenames: true

      - id: check-copyright
        name: Check copyright headers
        entry: scripts/check-copyright.sh
        language: script
        types: [text]
        exclude: ^(\.git/|build/|third_party/|docs/archive/)

      - id: no-debug-code
        name: Check for debug code
        entry: scripts/check-no-debug.sh
        language: script
        types_or: [c++, c]
        pass_filenames: true

      - id: validate-includes
        name: Validate include order
        entry: scripts/validate-includes.sh
        language: script
        types_or: [c++, c]
        pass_filenames: true

# Configuration for specific hooks
exclude: |
  (?x)^(
    build/.*|
    third_party/.*|
    docs/archive/.*|
    .*\.min\.js|
    .*\.min\.css
  )$
